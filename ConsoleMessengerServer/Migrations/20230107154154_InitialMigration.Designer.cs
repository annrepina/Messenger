// <auto-generated />
using System;
using ConsoleMessengerServer.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleMessengerServer.Migrations
{
    [DbContext(typeof(MessengerDbContext))]
    [Migration("20230107154154_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsoleMessengerServer.Entities.Dialog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Dialogs");
                });

            modelBuilder.Entity("ConsoleMessengerServer.Entities.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<int>("DialogId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserDataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DialogId");

                    b.HasIndex("UserDataId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ConsoleMessengerServer.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Surname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasAlternateKey("PhoneNumber");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("ConsoleMessengerServer.Entities.ServerNetworkProviderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("UserDataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserDataId");

                    b.ToTable("NetworkProviders", (string)null);
                });

            modelBuilder.Entity("ConsoleMessengerServer.Entities.UserData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsOnline")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("PersonId");

                    b.ToTable("UserData");
                });

            modelBuilder.Entity("DialogUserData", b =>
                {
                    b.Property<int>("DialogsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersDataId")
                        .HasColumnType("int");

                    b.HasKey("DialogsId", "UsersDataId");

                    b.HasIndex("UsersDataId");

                    b.ToTable("DialogUserData");
                });

            modelBuilder.Entity("ConsoleMessengerServer.Entities.Message", b =>
                {
                    b.HasOne("ConsoleMessengerServer.Entities.Dialog", "Dialog")
                        .WithMany("Messages")
                        .HasForeignKey("DialogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleMessengerServer.Entities.UserData", "UserData")
                        .WithMany("SentMessages")
                        .HasForeignKey("UserDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dialog");

                    b.Navigation("UserData");
                });

            modelBuilder.Entity("ConsoleMessengerServer.Entities.ServerNetworkProviderEntity", b =>
                {
                    b.HasOne("ConsoleMessengerServer.Entities.UserData", "UserData")
                        .WithMany("NetworkProviders")
                        .HasForeignKey("UserDataId");

                    b.Navigation("UserData");
                });

            modelBuilder.Entity("ConsoleMessengerServer.Entities.UserData", b =>
                {
                    b.HasOne("ConsoleMessengerServer.Entities.Person", "Person")
                        .WithOne("UserData")
                        .HasForeignKey("ConsoleMessengerServer.Entities.UserData", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("DialogUserData", b =>
                {
                    b.HasOne("ConsoleMessengerServer.Entities.Dialog", null)
                        .WithMany()
                        .HasForeignKey("DialogsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleMessengerServer.Entities.UserData", null)
                        .WithMany()
                        .HasForeignKey("UsersDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleMessengerServer.Entities.Dialog", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("ConsoleMessengerServer.Entities.Person", b =>
                {
                    b.Navigation("UserData");
                });

            modelBuilder.Entity("ConsoleMessengerServer.Entities.UserData", b =>
                {
                    b.Navigation("NetworkProviders");

                    b.Navigation("SentMessages");
                });
#pragma warning restore 612, 618
        }
    }
}
